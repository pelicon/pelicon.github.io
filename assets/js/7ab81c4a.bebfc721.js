"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[964],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(a),m=o,k=d["".concat(i,".").concat(m)]||d[m]||u[m]||r;return a?n.createElement(k,c(c({ref:t},s),{},{components:a})):n.createElement(k,c({ref:t},s))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,c=new Array(r);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var p=2;p<r;p++)c[p]=a[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8733:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(7462),o=(a(7294),a(3905));const r={id:"intro",sidebar_position:1,sidebar_label:"Documentation"},c="Documentation",l={unversionedId:"intro",id:"intro",title:"Documentation",description:"Concept",source:"@site/docs/documentation.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/documentation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"intro",sidebar_position:1,sidebar_label:"Documentation"},sidebar:"tutorialSidebar",next:{title:"Concept",permalink:"/docs/concept"}},i={},p=[{value:"Concept",id:"concept",level:2},{value:"Software Architecture",id:"software-architecture",level:2},{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Automatic expansion",id:"automatic-expansion",level:2},{value:"Scheduled snapshot",id:"scheduled-snapshot",level:2},{value:"Backup",id:"backup",level:2},{value:"Backup configuration",id:"backup-configuration",level:3},{value:"Create automatic backup policy",id:"create-automatic-backup-policy",level:3},{value:"PVC binding Policy",id:"pvc-binding-policy",level:3}],s={toc:p};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"documentation"},"Documentation"),(0,o.kt)("h2",{id:"concept"},"Concept"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/concept"},"Concept")," introduces the concepts used or created within Pelicon, and their explanations."),(0,o.kt)("h2",{id:"software-architecture"},"Software Architecture"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/design/arch"},"Software Architecture")," briefly introduces the software architecture of Pelicon."),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone repo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://gitlab.daocloud.cn/ndx/engineering/storage/uds.git && cd uds\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Install")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f deploy/crds\nkubectl apply -f deploy\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Create ","[StorageProvider]","(/docs/concept#StorageProvider CRD) to access the supported storage system (",(0,o.kt)("a",{parentName:"li",href:"/docs/supported_storage"},"supported storage"),")")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ls deploy/sp\n\nkubectl apply -f xxx.yaml\n")),(0,o.kt)("p",null,"or ",(0,o.kt)("a",{parentName:"p",href:"/docs/unknown_storage"},"Access unknown storage")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"[Automatic expansion]","(#Automatic expansion)")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"[Schduled snapshot]","(#Scheduled snapshot)")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"#Backup"},"Backup")))),(0,o.kt)("h2",{id:"automatic-expansion"},"Automatic expansion"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an automatic expansion policy")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: uds.dce.daocloud.io/v1alpha1\nkind: ResizePolicy\nmetadata:\n  name: resize-when-reach-50percent\n  namespace: default\nspec:\n  expansionCapacityBytes: 1073741824\n  resizePolicyName: resize1\n  threshold: 50\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"PVC binding Policy")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl annotate pvc <your-pvc-name> uds.dce.daocloud.io/policy-pvc=\'{"resizePolicies":{"resize-when-reach-50percens":null}}\'\n')),(0,o.kt)("h2",{id:"scheduled-snapshot"},"Scheduled snapshot"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a snapshot policy")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: uds.dce.daocloud.io/v1alpha1\nkind: SnapshotPolicy\nmetadata:\n  name: scheduled-snap-01\n  namespace: default\nspec:\n  retain: 10\n  schedule: 0 42 14 * * 6\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"PVC binding Policy")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl annotate pvc <your-pvc-name> uds.dce.daocloud.io/policy-pvc=\'{"snapshotPolicies":{"scheduled-snap-01":null}}\'\n')),(0,o.kt)("h2",{id:"backup"},"Backup"),(0,o.kt)("h3",{id:"backup-configuration"},"Backup configuration"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Backup to NFS")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  labels:\n    backend-storage-type: NFS\n  name: nfs-target\n  namespace: default\ndata:\n  nfs.config: \'{"nfsServer":"10.6.234.2","nfsExportPath":"/nfs","nfsBackupRootDir":"/backup"}\'\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Backup to S3")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  annotations:\n    uds.dce.daocloud.io/backup-target-config: \'{"s3ConfName":"dce-uds-backup-remote-s3","s3BackupBucket":"uds-backup"}\'\n  name: s3-target\n  namespace: default\ndata:\n  rclone.conf: |-\n    [dce-uds-backup-remote-s3]\n    type = s3\n    provider = Minio\n    env_auth=false\n    access_key_id = Access KEY\n    secret_access_key = Secret KEY\n    endpoint=10.7.209.49:9000\n    location-constraint=us-east-1\n    acl = private\n')),(0,o.kt)("h3",{id:"create-automatic-backup-policy"},"Create automatic backup policy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: uds.dce.daocloud.io/v1alpha1\nkind: BackupPolicy\nmetadata:\n  name: backup01\n  namespace: default\nspec:\n  backupTargetType: S3\n  backupType: full\n  configMapName: s3-target\n  configMapNamespace: default\n  retain: 10\n  schedule: 0 36 14 * * 5\nstatus:\n  phase: Running\n")),(0,o.kt)("h3",{id:"pvc-binding-policy"},"PVC binding Policy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl annotate pvc <your-pvc-name> uds.dce.daocloud.io/policy-pvc=\'{"backupPolicies":{"backup01":null}}\'\n')))}u.isMDXComponent=!0}}]);